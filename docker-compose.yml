version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@shopifystudio.ir}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@shopifystudio.ir}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/status', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add PostgreSQL for production
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: shopify_studio
  #     POSTGRES_USER: shopifyapp
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis_data:/data

# volumes:
#   postgres_data:
#   redis_data: